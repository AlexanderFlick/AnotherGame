@using Game.Data.Models
@using Game.Data.Models.Resources
@inject NewGame Game
@rendermode InteractiveServer

<div style="text-align:center;">
    <h3>Chest</h3>
    <p>Chest Storage: @Game.Player.Chest.Resources.Count/@Game.Player.Chest.ResourceCap</p>
    <div>
        <table style="width:80%;">
            <tr>
                <th>Name</th>
                <th>Gold Value</th>
                <th>Total</th>
                <th></th>
                <th></th>
            </tr>
            @foreach (var summary in ItemSummaries)
        {
            <tr style="padding-bottom:20px;">
                    <td>@summary.Item.Name</td>
                    <td>@summary.Item.Value</td>
                    <td>@summary.TotalResource</td>
                    <td>
                        <button class="btn btn-primary" style="width:100%">Sell @summary.Item.Name</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" style="width:100%" @onclick="(() => DeleteResource(summary.Item))">
                            Delete 1 @summary.Item.Name
                        </button>
                    </td>
                </tr>
        }
        </table>
    </div>
</div>

@code {
public List<ItemSummary> ItemSummaries { get; set; } = new();

protected override void OnInitialized()
{
    Game.OnStateChanged = () =>
    {
        UpdateItemSummaries();
        StateHasChanged();
    };

    UpdateItemSummaries();
}

private void UpdateItemSummaries()
{
    ItemSummaries = Game.Player.Chest.Resources
        .GroupBy(resource => resource.Name)
        .Select(group => new ItemSummary
            {
                Item = group.First(),
                TotalResource = group.Count()
            })
        .ToList();
}

public void DeleteResource(Resource item)
{
    var resourceToRemove = Game.Player.Chest.Resources.FirstOrDefault(x => x.Name == item.Name);
    if (resourceToRemove is not null)
    {
        Game.Player.Chest.Resources.Remove(resourceToRemove);

        Game.OnStateChanged?.Invoke();
    }
}

public void SellResource(Resource item)
{

}
}
